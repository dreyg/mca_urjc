common:
  networkPolicyEnabled: true
  ingressEnabled: true
  persistentVolumeCreate: false

server:
  deployment:
    replicaCount: 1
    strategyType: Recreate
    envs:
      - key: MYSQL_HOST
        value: mysql-service
      - key: MYSQL_DB
        value: eoloplantsDB
      - key: MYSQL_USER
        value: root
      - key: MYSQL_PASS
        value: password
      - key: RABBITMQ_URL
        value: amqp://root:password@rabbitmq-service
    image:
      repository: oscarsotosanchez/server
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.0
      command: bash
      args:
        - arg: -c
        - arg: ./wait-for-it.sh mysql-service:3306 -t 500 -- ./wait-for-it.sh rabbitmq-service:5672 -t 500 -- node src/server.js
    podAnnotations: {}
    podSecurityContext:
      runAsUser: 1001
    restartPolicy: Always
    dnsPolicy: enabled
  service:
    name: server
    type: ClusterIP
    ports:
      - port: 3000
        protocol: TCP
        portName: server-port
  networkPolicy:
    enabled: true
    egress:
      - service: mysql
        portNumber: 3306
        portProtocol: TCP
      - service: rabbitmq
        portNumber: 5672
        portProtocol: TCP
    ingress:
      - namespaceSelector: "kubernetes.io/metadata.name: kube-system"
        podSelector: "app.kubernetes.io/name: ingress-nginx"
        portNumber: 3000
        portProtocol: TCP

mysql:
  persistentVolume:
    name: mysql
    storage: 1Gi
    hostPath: /db/mysql
    claim:
      name: mysql-pvc
  networkPolicy:
    ingress:
      - service: server
        portNumber: 3306
        portProtocol: TCP
  service:
    name: mysql
    type: ClusterIP
    port: 3306
    protocol: TCP
    portName: mysql-port
  deployment:
    podAnnotations: {}
    podSecurityContext: {}
    securityContext: {}
    replicaCount: 1
    strategyType: Recreate
    volumeMount:
      path: /var/lib/mysql
      name: datadb
    envs:
      - key: MYSQL_ROOT_PASSWORD
        value: password
      - key: MYSQL_DATABASE
        value: eoloplantsDB
    image:
      repository: mysql
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: 8.0.22
    persistentVolume:
      create: true
      name: mysql
      storage: 1Gi
      hostPath: /db/mysql
      claim:
        name: mysql-pvc

rabbitmq:
  persistentVolume:
    name: rabbit
    storage: 1Gi
    hostPath: /db/rabbitmq
    claim:
      name: rabbit-pvc
  service:
    name: rabbitmq
    type: ClusterIP
    ports:
      - port: 5672
        protocol: TCP
        portName: rabbitmq-port-5672
      - port: 15672
        protocol: TCP
        portName: rabbitmq-port-15672
  networkPolicy:
    ingress:
      - services:
          - name: planner
          - name: server
        portNumber: 5672
        portProtocol: TCP
  deployment:
    podAnnotations: {}
    podSecurityContext: {}
    securityContext: {}
    replicaCount: 1
    strategyType: Recreate
    volumeMount:
      path: /var/lib/rabbitmq/mnesia
      name: datarabbit
    envs:
      - key: RABBITMQ_DEFAULT_USER
        value: root
      - key: RABBITMQ_DEFAULT_PASS
        value: password
    image:
      repository: rabbitmq
      pullPolicy: IfNotPresent
      tag: 3-management
    persistentVolume:
      create: false
      name: rabbit
      storage: 1Gi
      hostPath: /db/rabbitmq
      claim:
        name: rabbit-pvc        

planner:
  deployment:
    name: planner
    replicaCount: 1
    strategyType: Recreate
    envs:
      - key: TOPO_HOST
        value: toposervice-service
      - key: TOPO_PORT
        value: "8080"
      - key: GRPC_CLIENT_WEATHERSERVER_ADDRESS
        value: static://weatherservice-service:9090
      - key: SPRING_RABBITMQ_HOST
        value: rabbitmq-service
      - key: SPRING_RABBITMQ_PORT
        value: "5672"
      - key: SPRING_RABBITMQ_USERNAME
        value: root
      - key: SPRING_RABBITMQ_PASSWORD
        value: password
    image:
      repository: juaneb/jescribanobdreygplanner
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.0
    podAnnotations: {}
    podSecurityContext:
      runAsUser: 1001
    restartPolicy: Always
    dnsPolicy: enabled
  networkPolicy:
    egress:
      - service: rabbitmq
        portNumber: 5672
        portProtocol: TCP
      - service: weatherservice
        portNumber: 9090
        portProtocol: TCP
      - service: toposervice
        portNumber: 8080
        portProtocol: TCP        

toposervice:
  deployment:
    replicaCount: 1
    strategyType: Recreate
    envs:
      - key: SPRING_DATA_MONGODB_HOST
        value: mongodb-service
      - key: SPRING_DATA_MONGODB_PORT
        value: "27017"
      - key: SPRING_DATA_MONGODB_DATABASE
        value: topoDB
      - key: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
        value: admin
      - key: SPRING_DATA_MONGODB_USERNAME
        value: root
      - key: SPRING_DATA_MONGODB_PASSWORD
        value: password
    image:
      repository: oscarsotosanchez/toposervice
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.0
    podAnnotations: {}
    podSecurityContext:
      runAsUser: 1001
    restartPolicy: Always
    dnsPolicy: enabled
  service:
    name: toposervice
    type: ClusterIP
    port: 8080
    protocol: TCP
    portName: topo-port
  networkPolicy:
    enabled: true
    egress:
      - service: mongodb
        portNumber: 27017
        portProtocol: TCP
    ingress:
      - namespaceSelector: "kubernetes.io/metadata.name: kube-system"
        podSelector: "app.kubernetes.io/name: ingress-nginx"
        service: planner
        portNumber: 8080
        portProtocol: TCP

mongo:
  networkPolicy:
    ingress:
      - service: toposervice
        portNumber: 27017
        portProtocol: TCP
  service:
    name: mongodb
    type: ClusterIP
    ports:
      - port: 27017
        protocol: TCP
        portName: mongodb-port-27017
      - port: 27018
        protocol: TCP
        portName: mongodb-port-27018
      - port: 27019
        protocol: TCP
        portName: mongodb-port-27019
  deployment:
    replicaCount: 1
    strategyType: Recreate
    podAnnotations: {}
    podSecurityContext: {}
    securityContext: {}
    volumeMount:
      path: /data/db
      name: datadb
    envs:
      - key: MONGO_INITDB_DATABASE
        value: topoDB
      - key: MONGO_INITDB_ROOT_USERNAME
        value: root
      - key: MONGO_INITDB_ROOT_PASSWORD
        value: password
    image:
      repository: mongo
      pullPolicy: IfNotPresent
      tag: 4.2.12-bionic
  persistentVolume:
    name: mongo
    storage: 1Gi
    hostPath: /db/mongo
    claim:
      name: mongo-pvc

weatherservice:
  deployment:
    replicaCount: 1
    strategyType: Recreate
    envs:
      - key: GRPC_HOST
        value: status.podIP
      - key: GRPC_PORT
        value: "9090"
    image:
      repository: oscarsotosanchez/weatherservice
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: v1.0
    podAnnotations: {}
    podSecurityContext:
      runAsUser: 1001
    restartPolicy: Always
    dnsPolicy: enabled
  service:
    name: weatherservice
    type: ClusterIP
    port: 9090
    protocol: TCP
    portName: weatherservice-port
  networkPolicy:
    ingress:
      - service: planner
        portNumber: 9090
        portProtocol: TCP

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  hosts:
    - host: cluster-ip
      paths:
        - path: /(.*)
          pathType: ImplementationSpecific
          backend:
            serviceName: server
            servicePort: server
        - path: /toposervice/(.*)
          pathType: ImplementationSpecific
          backend:
            serviceName: toposervice
            servicePort: topo

networkPolicyGlobal:
  policies:
    - name: dns-egress
      dnsPolicy: enabled
      egressPorts:
        - port: 53
          protocol: UDP
        - port: 53
          protocol: TCP
    - name: default-deny
      policyTypes:
        - type: Ingress
        - type: Egress

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
