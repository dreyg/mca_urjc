{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/users/": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "Get all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Found all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "Update information about user",
        "operationId": "replaceUser",
        "requestBody": {
          "description": "User to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user attributes supplied"
          }
        }
      },
      "post": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "Create a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "User to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created the user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user attributes supplied"
          },
          "406": {
            "description": "Nick user exists"
          }
        }
      }
    },
    "/api/v1/books/{bookId}/comments/": {
      "post": {
        "tags": [
          "book-rest-controller"
        ],
        "summary": "Add a comment to a book",
        "operationId": "createComment",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "identifier of the book to which the comment will be added",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "comment to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Added comment to the book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid comment attributes supplied"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    },
    "/api/v1/books/": {
      "get": {
        "tags": [
          "book-rest-controller"
        ],
        "summary": "Get all books",
        "operationId": "getBooks",
        "responses": {
          "200": {
            "description": "Found all books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "book-rest-controller"
        ],
        "summary": "Create a new book",
        "operationId": "createBook",
        "requestBody": {
          "description": "Book to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created the book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDetailsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid book attributes supplied"
          }
        }
      }
    },
    "/api/v1/users/{userId}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "Get a user by its id",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "id of user to be searched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found the user and her comments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid format id supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "identifier of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted user without comment associated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid format id supplied"
          },
          "404": {
            "description": "User not found"
          },
          "406": {
            "description": "User with comments associates"
          }
        }
      }
    },
    "/api/v1/books/{bookId}": {
      "get": {
        "tags": [
          "book-rest-controller"
        ],
        "summary": "Get a book by its id",
        "operationId": "getBook",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "id of book to be searched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found the book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookDetailsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid format id supplied"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    },
    "/api/v1/books/{bookId}/comments/{commentId}": {
      "delete": {
        "tags": [
          "book-rest-controller"
        ],
        "summary": "Delete a comment from a book",
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "identifier of the book to which the comment belongs",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "id of comment to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted comment from the book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid format id supplied"
          },
          "404": {
            "description": "Book or comment not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRequestDto": {
        "required": [
          "nick"
        ],
        "type": "object",
        "properties": {
          "nick": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          }
        }
      },
      "CommentResponseUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "nick": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentResponseUserDto"
            }
          }
        }
      },
      "CommentRequestDto": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "score": {
            "maximum": 5,
            "minimum": 0,
            "type": "number",
            "format": "float"
          },
          "user": {
            "$ref": "#/components/schemas/UserRequestDto"
          }
        }
      },
      "CommentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponseDto"
          },
          "comment": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "BookRequestDto": {
        "required": [
          "author",
          "publisher",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "publisher": {
            "type": "string"
          },
          "publicationYear": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentRequestDto"
            }
          }
        }
      },
      "BookDetailsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "publisher": {
            "type": "string"
          },
          "publicationYear": {
            "type": "integer",
            "format": "int32"
          },
          "score": {
            "type": "number",
            "format": "float"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentResponseDto"
            }
          }
        }
      },
      "BookResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "type": "string"
          },
          "score": {
            "type": "number",
            "format": "float"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nick": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      }
    }
  }
}